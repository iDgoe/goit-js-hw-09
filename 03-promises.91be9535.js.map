{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAgCtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAClB,GAClBJ,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAErCG,EAAO,CAAEJ,SAAUA,EAAUC,MAAOA,GAAQ,GAE7CA,EAAM,G,CAxCbO,QAAQC,IAAIb,GAEZA,EAAOc,iBAAiB,UAExB,SAAoBC,GAClBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAOK,MAAMc,OAC5BC,EAAOF,OAAOlB,EAAOoB,KAAKD,OAC1BE,EAASH,OAAOlB,EAAOqB,OAAOF,OAElCP,QAAQC,IAAII,EAAOG,EAAMC,GAEzB,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBO,QAAQC,IAAI,uBAAqBT,QAAiBC,OAClDmB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBO,QAAQC,IAAI,sBAAoBT,QAAiBC,OACjDmB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAGnDY,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst myAdds = document.querySelector('.form');\nconsole.log(myAdds);\n\nmyAdds.addEventListener('submit', myFunction);\n\nfunction myFunction(e) {\n  e.preventDefault();\n\n  let delay = Number(myAdds.delay.value);\n  let step = Number(myAdds.step.value);\n  let amount = Number(myAdds.amount.value);\n\n  console.log(delay, step, amount);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay = delay + step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve > 0.3) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$myAdds","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.91be9535.js.map"}